initSidebarItems({"attr":[["gauge","Declare a gauge callback. It will be automatically exported with the name `NAME_gauge_callback`, where `NAME` is the name of the decorated function. `rs use futures::stream::{Stream, StreamExt}; // Declare and export `FOO_gauge_callback` #[msfs::gauge] async fn FOO(mut gauge: msfs::Gauge) -> Result<(), Box<dyn std::error::Error>> {   while let Some(event) = gauge.next_event().await {     // ...   } } `"],["standalone_module","Declare a standalone module. `rs #[standalone_module] struct MyModule {} impl Default for MyModule {   fn default() -> Self {     println!(\"module is initialized\");     MyModule {}   } } impl Drop for MyModule {   fn drop(&mut self) {     println!(\"module is deinitialized\");   } } `"]],"enum":[["MSFSEvent",""],["PanelServiceID","`PanelServiceID` is used in `GaugeCallback`."]],"mod":[["legacy","Bindings to the Legacy/gauges.h API"]],"struct":[["Gauge","Gauge"]]});